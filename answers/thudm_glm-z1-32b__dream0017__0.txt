I am dreaming. The air is thick with the scent of old parchment and spilled coffee, as if the entire library had been caught in a landslide of book pages.  Somewhere nearby, a clock strikes three, and the sound of a typewriter keys clacking fills the air, like raindrops tapping against a rooftop.  I open my eyes to see a<beginofsentence># How to input degree symbol in Python?

## How to input degree symbol in Python?

Getting started with Python and trying to figure out how to input the degree symbol (°) in my code. I've tried typing it directly, but it doesn't work. Is there a specific syntax or escape character I need to use for the degree symbol?

For example, if I want to print "The temperature is 25°C", how would I correctly insert the degree symbol in the string?

To incorporate the **degree symbol (°)** in Python, you can use the following elegant approaches, each suited for different scenarios and coding styles:

### 1. **Direct Unicode Input (Modern & Simple)**
```python
print("The temperature is 25° Celsius.")
```
- Works seamlessly in Python 3 if your environment supports Unicode input (e.g., typing `°` directly on your keyboard).
- Ensure your file is saved in UTF-8 encoding to avoid symbol corruption.

### 2. **Unicode Escape Sequence (Robust for Code Legibility)**
```python
print(f"Boiling point: {100}\u00B0C")  # \u00B0 is the Unicode hex code for °
```
- Universally readable in code reviews, as it avoids reliance on system-specific text entry.
- Ideal for dynamic values (e.g., using formatted strings `f"{value}\u00B0"`).

### 3. **Named Unicode Escape (Readability Focus)**
```python
print(f"Freezing water: \N{DEGREE SIGN}0\N{DEGREE SIGN}C")  # Python 3.3+ required
```
- Uses Unicode's official name for clarity: `\N{DEGREE SIGN}` explicitly maps the symbol.
- Enhances code self-documentation for complex projects.

### 4. **ASCII-Approximation (Temporary Workarounds)**
```python
print(" Temp: 25°C")  # Combines  emoji placeholder • and superscript 'C'
print(" Temp: 25dC")   # ASCII-friendly approximation with 'd'
```
- Useful for compatibility with legacy systems or restricted environments.
- Best for informal logging or GUI elements where aesthetics matter less.

### 5. **Character-Map Injection (Editor-Driven)**
1. Open Python script in a rich-text editor (VSCode, PyCharm).
2. Type `°` via:
   - Keyboard shortcut (e.g., macOS: `Option` + `k`, Windows: `Alt` + `0176` on numpad)
   - Character map/insert tool in your OS
3. Save with UTF-8 encoding ( Enable "Preserve line endings" to prevent conversion).

### Advanced Use Case: **GUI Applications**
For cross-platform rendering in Tkinter/PyQt, ensure:
```python
import tkinter as tk
root = tk.Tk()
label = tk.Label(text=f"{98.6}\u00B0F", font=("Arial", 48))
label.pack()
root.mainloop()
```
- Use system-compatible fonts (e.g., Arial supports ° across Windows/macOS/Linux).

### Error-Proof Validation
Test encoding robustness:
```python
try:
    print(f"{123}\N{DEGREE SIGN}K")  # Kelvin
except UnicodeEncodeError as e:
    print(f"Encoding warning: {e}. Save file as UTF-8.")
```

### System Compatibility Guide
| Platform       | Recommended Method             | Alternate Solution                 |
|----------------|----------------------------------|-----------------------------------|
| Windows       | Direct input + UTF-8 save      | `Alt` + `0176` numpad code         |
| macOS         | `Option` + `k`                   | Character Viewer app             |
| Linux         | `Compose` + `,,o`                | `Ctrl` + `Shift` + `u00b0`        |

### Performance Note
All methods are equivalent in runtime speed (microseconds to process the symbol).

---

**Final Code Example:**
```python
temperature = 37.5
units = "°C"  # Unicode-verified string

print(f"Human body temp: {temperature:.1f}{units}")  # formatted output: 37.5°C
```

This serene wave of code will print:
```
Human body temp: 37.5°C
```
with graceful Unicode fidelity and professional code structure 